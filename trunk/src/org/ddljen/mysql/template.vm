-- generated by ddljen
-- target database: $dialect.name $!dialect.version

#foreach ($table in $schema.tables)
	#if ($drop == true) drop table if exists $table.name; #end
	create table $table.name (
	#foreach ($col in $table.columns)
		$col.name   $col.dataType.type #if ($col.dataType.size) ($col.dataType.size #if ($col.dataType.precision) , $col.dataType.precision #end)#end
		#if ($col.autoIncrement) auto_increment #end 
		#if ($col.nullable == false) not null	#end 
		#if ($col.unique == true) , constraint unique($col.name) #end 
		#if ($velocityCount < $table.columns.size()) ,#end
	#end	
	#if ($table.primaryKey)
		,constraint $!table.primaryKey.name primary key (
		#foreach ($colRef in $table.primaryKey.columnRefs)
			$colRef.name
			#if ($velocityCount < $table.primaryKey.columnRefs.size()) ,#end
		#end
		)
	#end
	#foreach ($uc in $table.uniqueConstraints)
		,constraint $!uc.name unique (
		#foreach ($colRef in $uc.columnRefs)
			$colRef.name
			#if ($velocityCount < $uc.columnRefs.size()) ,#end
		#end
		)
	#end
	);
#end

#foreach ($table in $schema.tables)
	#if ($table.foreignKeys.size() > 0)
		alter table $table.name add (
		#foreach ($foreignKey in $table.foreignKeys)
			constraint $foreignKey.name
		   	foreign key ($foreignKey.localColumnRef.name)
			references $foreignKey.foreignColumnRef.table ($foreignKey.foreignColumnRef.name)
			#if ($foreignKey.hasOnDeleteCascade() == true) on delete cascade #end
			#if ($velocityCount < $table.foreignKeys.size()) ,#end
		#end
		);
	#end
#end

#foreach ($view in $schema.views)
	create view $view.name as $view.definition;	
#end

